name: VPC Deploy

on:
  workflow_call:
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true

jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # Set up Environment
      - name: Set Environment
        working-directory: ./terraform/final copy
        run: |
          if [[ ${{ github.ref }} == 'refs/heads/main' ]]; then
            echo "TF_VARS=env/production/terraform.tfvars" >> $GITHUB_ENV
          else
            echo "TF_VARS=env/staging/terraform.tfvars" >> $GITHUB_ENV
          fi

      # Step 1: Set up Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.0

      # Step 2: Initialize Terraform
      - name: Initialize Terraform
        working-directory: ./terraform/final copy
        run: terraform init

      # Step 3: Validate Terraform
      - name: Terraform Validate
        working-directory: ./terraform/final copy
        run: terraform validate

      # Step 4: Generate Terraform Plan
      - name: Terraform Plan
        working-directory: ./terraform/final copy
        run: terraform plan -var-file=$TF_VARS -out=tfplan

      - name: Wait for 10 Seconds
        run: sleep 10s 

      # Step 5: Backup Terraform State
      - name: Backup Terraform State
        working-directory: ./terraform/final copy
        run: terraform state pull > state_backup.tfstate

      # Step 6: Apply Terraform Plan
      - name: Apply with Approval
        working-directory: ./terraform/final copy
        run: terraform apply -auto-approve tfplan
        continue-on-error: true

      # Rollback Step: Revert to Last Stable State if Apply Fails
      - name: Rollback Terraform
        if: failure()
        working-directory: ./terraform/final copy
        run: terraform apply -auto-approve state_backup.tfstate