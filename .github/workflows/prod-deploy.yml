name: Deploy to EC2

on:
  push:
    branches:
      - main
      
concurrency:
  group: terraform-lock
  cancel-in-progress: false

jobs:
  deploy:
    name: Push to EC2
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: "1.6.0"
          terraform_wrapper: false
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Terraform Output 
          
        working-directory: ./terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          terraform init
          terraform apply -auto-approve
          DNS=$(terraform output -raw ec2_public_dns)
          echo "EC2_PUBLIC_DNS=$DNS" >> $GITHUB_ENV

      # Add your deployment or SSH steps here
      - name: Deploy to EC2 instance
        uses: easingthemes/ssh-deploy@v2.1.5
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          SOURCE: "./"
          REMOTE_HOST: ${{ env.EC2_PUBLIC_DNS }}
          REMOTE_USER: ${{ secrets.USERNAME }}
          TARGET: ${{ secrets.TARGET_DIR }}

      - name: Execute remote SSH commands
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.EC2_PUBLIC_DNS }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo apt-get update -y

            curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
            sudo apt-get install -y nodejs

            cd /home/ubuntu/app/my-app

            npm install

            npm run build

            sudo npm install -g pm2

            pm2 delete all

            pm2 start npm --name "nextjs-app" -- start
