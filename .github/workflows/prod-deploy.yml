name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Push to EC2
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: "1.6.0"  # Specify your Terraform version

      - name: Terraform Init and Apply
        working-directory: ./terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          echo "Running Terraform Init..."
          terraform init 2>&1 | tee terraform.log

          echo "Running Terraform Apply..."
          terraform apply -auto-approve 2>&1 | tee -a terraform.log
          EC2_PUBLIC_DNS=$(terraform output -raw ec2_public_dns)
          echo "$EC2_PUBLIC_DNS"
          echo "EC2_PUBLIC_DNS=$(echo $EC2_PUBLIC_DNS | cut -d'::' -f1)" >> $GITHUB_ENV
          - name: Set EC2 Public DNS
          run: |
            echo "EC2_PUBLIC_DNS=ec2-65-1-107-126.ap-south-1.compute.amazonaws.com" >> $GITHUB_ENV
      
      - name: Debug EC2 Public DNS
        run: |
            echo "EC2 Public DNS: ${{ env.EC2_PUBLIC_DNS }}"

      - name: Set EC2 Public DNS
        run: |
#         echo "EC2_PUBLIC_DNS=" >> $GITHUB_ENV

      - name: Debug EC2 Public DNS
        run: |
          echo "EC2 Public DNS: ${{ env.EC2_PUBLIC_DNS }}"
      # Add your deployment or SSH steps here
      - name: Deploy to EC2 instance
        uses: easingthemes/ssh-deploy@v2.1.5
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          SOURCE: "./"
          REMOTE_HOST: ${{ env.EC2_PUBLIC_DNS }}
          REMOTE_USER: ${{ secrets.USERNAME }}
          TARGET: ${{ secrets.TARGET_DIR }}

      - name: Execute remote SSH commands
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.EC2_PUBLIC_DNS }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Update system packages
            sudo apt-get update -y

            # Install Node.js and npm
            curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
            sudo apt-get install -y nodejs

            # Navigate to the project directory
            cd /home/ubuntu/app/my-app

            # Install project dependencies
            npm install

            # Build the Next.js project
            npm run build

            # Install PM2 globally
            sudo npm install -g pm2
            pm2 delete all

            # Start the Next.js app with PM2
            pm2 start npm --name "nextjs-app" -- start
